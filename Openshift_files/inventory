[OSEv3:children]
masters
nodes
etcd
glusterfs
#glusterfs_registry

[OSEv3:vars]
ansible_become=true
openshift_deployment_type=openshift-enterprise
#openshift_disable_check=memory_availability,disk_availability,docker_storage,package_version,docker_image_availability,package_availability
openshift_disable_check=memory_availability
openshift_enable_service_catalog=false
openshift_master_dynamic_provisioning_enabled=true
osm_use_cockpit=false
os_firewall_use_firewalld=True

openshift_master_api_port=443
openshift_master_console_port=443

## Admin and Developer passwords was generated by running "htpasswd -nb <USERNAME> redhat" for each user 
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]
openshift_master_htpasswd_users={'admin': '$apr1$zQnWy2uU$ytWlD9id3xonNmZaNkI9q/', 'developer': '$apr1$uh1LkEbr$Evamtx9cd5WhqHr6W4puo0'}

os_sdn_network_plugin_name=redhat/openshift-ovs-networkpolicy
openshift_master_cluster_hostname=console.<CLUSTERID>.<DOMAIN>
openshift_master_cluster_public_hostname=console.<CLUSTERID>.<DOMAIN>
openshift_master_default_subdomain=apps.<CLUSTERID>.<DOMAIN>

## If you're using Lets'Encrypt certificates, change the value to true and uncomment next sessions
openshift_master_overwrite_named_certificates=false
#openshift_master_named_certificates=[{ "certfile": "{{ lookup('env','HOME') }}/.acme.sh/console.<CLUSTERID>.<DOMAIN>/console.<CLUSTERID>.<DOMAIN>.cer", "keyfile": "{{ lookup('env','HOME') }}/.acme.sh/console.<CLUSTERID>.<DOMAIN>/console.<CLUSTERID>.<DOMAIN>.key", "cafile": "{{ lookup('env','HOME') }}/.acme.sh/console.<CLUSTERID>.<DOMAIN>/ca.cer", "names": [ "console.<CLUSTERID>.<DOMAIN>" ] }]
#openshift_hosted_router_certificate={ "certfile": "{{ lookup('env','HOME') }}/.acme.sh/apps.<CLUSTERID>.<DOMAIN>/apps.<CLUSTERID>.<DOMAIN>.cer", "keyfile": "{{ lookup('env','HOME') }}/.acme.sh/apps.<CLUSTERID>.<DOMAIN>/apps.<CLUSTERID>.<DOMAIN>.key", "cafile": "{{ lookup('env','HOME') }}/.acme.sh/apps.<CLUSTERID>.<DOMAIN>/ca.cer" }

#openshift_hosted_registry_routehost=registry.apps.<CLUSTERID>.<DOMAIN>
#openshift_hosted_registry_routecertificates={ "certfile": "{{ lookup('env','HOME') }}/.acme.sh/registry.apps.<CLUSTERID>.<DOMAIN>/registry.apps.<CLUSTERID>.<DOMAIN>.cer", "keyfile": "{{ lookup('env','HOME') }}/.acme.sh/registry.apps.<CLUSTERID>.<DOMAIN>/registry.apps.<CLUSTERID>.<DOMAIN>.key", "cafile": "{{ lookup('env','HOME') }}/.acme.sh/registry.apps.<CLUSTERID>.<DOMAIN>/ca.cer" }
#openshift_hosted_registry_routetermination=reencrypt


oreg_url=registry.redhat.io/openshift3/ose-${component}:${version}
oreg_auth_user=<USER>
oreg_auth_password=<PASSWORD>
openshift_examples_modify_imagestreams=false
openshift_release=v3.11.117
openshift_image_tag=v3.11.117

# Define o node padr√£o para deploy dos pods de router
openshift_router_selector='node-role.kubernetes.io/infra=true'

## Definindo armazenamento tipo google storage para o registro
openshift_hosted_registry_replicas=1
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=gcs
openshift_hosted_registry_storage_gcs_bucket=<PROJECTID>-<CLUSTERID>-registry
## Definindo armazenamento tipo glusterfs (converged mode) para o registro
#openshift_hosted_registry_storage_kind=glusterfs 
#openshift_hosted_registry_storage_volume_size=15Gi
#openshift_hosted_registry_selector='node-role.kubernetes.io/infra=true'

# special storage configs
openshift_storage_glusterfs_image=registry.redhat.io/rhgs3/rhgs-server-rhel7:v3.11
openshift_storage_glusterfs_block_image=registry.redhat.io/rhgs3/rhgs-gluster-block-prov-rhel7:v3.11
openshift_storage_glusterfs_s3_image=registry.redhat.io/rhgs3/rhgs-s3-server-rhel7:v3.11
openshift_storage_glusterfs_heketi_image=registry.redhat.io/rhgs3/rhgs-volmanager-rhel7:v3.11
openshift_storage_glusterfs_namespace=storage
openshift_storage_glusterfs_heketi_admin_key=myS3cr3tpassw0rd
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_block_deploy=true
openshift_storage_glusterfs_block_host_vol_size=100
openshift_storage_glusterfs_block_storageclass=true
openshift_storage_glusterfs_block_storageclass_default=false
openshift_storage_glusterfs_wipe=True
openshift_storage_glusterfs_heketi_wipe=true

# metrics configs
openshift_metrics_install_metrics=true
#openshift_metrics_cassandra_storage_type=pv
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_storage_volume_size=15Gi
openshift_metrics_hawkular_hostname=metrics.apps.<CLUSTERID>.<DOMAIN>
openshift_metrics_cassandra_pvc_storage_class_name='glusterfs-storage-block'
openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/infra": "true"}

# logging configs
openshift_logging_install_logging=true
openshift_logging_es_pvc_dynamic=false
openshift_logging_elasticsearch_storage_type=pvc
openshift_logging_es_pvc_size=10Gi
openshift_logging_es_pvc_storage_class_name=glusterfs-storage-block
openshift_logging_es_memory_limit=4G
openshift_logging_kibana_hostname=kibana.apps.<CLUSTERID>.<DOMAIN>
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_es_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_storage_kind=dynamic
openshift_logging_curator_default_days=3

# monitoring configs
openshift_cluster_monitoring_operator_install=true
openshift_cluster_monitoring_operator_prometheus_storage_enabled=true
openshift_cluster_monitoring_operator_alertmanager_storage_enabled=true
openshift_cluster_monitoring_operator_prometheus_storage_capacity=15Gi
openshift_cluster_monitoring_operator_alertmanager_storage_capacity=5Gi
openshift_cluster_monitoring_operator_prometheus_storage_class_name=glusterfs-storage-block
openshift_cluster_monitoring_operator_alertmanager_storage_class_name=glusterfs-storage-block
openshift_cluster_monitoring_operator_node_selector={"node-role.kubernetes.io/infra":"true"}

[etcd]
<CLUSTERID>-master-0

[masters]
<CLUSTERID>-master-0

[nodes]
<CLUSTERID>-master-0 openshift_node_group_name='node-config-master'
<CLUSTERID>-infra-0 openshift_node_group_name='node-config-infra'
<CLUSTERID>-app-0 openshift_node_group_name='node-config-compute'
<CLUSTERID>-app-1 openshift_node_group_name='node-config-compute'
<CLUSTERID>-app-2 openshift_node_group_name='node-config-compute'

[glusterfs]
<CLUSTERID>-app-0 glusterfs_ip=10.240.0.5 glusterfs_devices='[ "/dev/sdc","/dev/sdd","/dev/sde" ]'
<CLUSTERID>-app-1 glusterfs_ip=10.240.0.7 glusterfs_devices='[ "/dev/sdc","/dev/sdd","/dev/sde" ]'
<CLUSTERID>-app-2 glusterfs_ip=10.240.0.6 glusterfs_devices='[ "/dev/sdc","/dev/sdd","/dev/sde" ]'

#[glusterfs_registry]
#<CLUSTERID>-app-0 glusterfs_ip=10.240.0.13 glusterfs_devices='[ "/dev/sdc","/dev/sdd","/dev/sde" ]'
#<CLUSTERID>-app-1 glusterfs_ip=10.240.0.14 glusterfs_devices='[ "/dev/sdc","/dev/sdd","/dev/sde" ]'
#<CLUSTERID>-app-2 glusterfs_ip=10.240.0.15 glusterfs_devices='[ "/dev/sdc","/dev/sdd","/dev/sde" ]'

[glusterfs:vars]
ansible_become=true

#[glusterfs_registry:vars]
#ansible_become=true
